name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
      - name: Install dependencies
        run: composer install --no-scripts --no-progress --no-interaction
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse
      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer --dry-run --verbose fix

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Create Database
        run: |
          mkdir -p data
          touch data/database.sqlite
      - name: Execute tests
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: php bin/phpunit --coverage-clover=coverage.xml
      - name: Upload Code Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  quality-check:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Check SonarQube Quality Gate
        run: |
          status=$(curl -s -u "${{ secrets.SONAR_TOKEN }}" \
          "https://sonarcloud.io/api/qualitygates/project_status?projectKey=YOUR_PROJECT_KEY" \
          | jq -r .projectStatus.status)
          if [[ "$status" != "OK" ]]; then
            echo "Quality gate failed!"
            exit 1
          fi

  # deploy:
  #   name: Deploy to Server
  #   runs-on: ubuntu-latest
  #   needs: [lint, test, quality-check]
  #   if: github.event_name == 'push'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Deploy to server
  #       run: ./deploy.sh
  #     - name: Verify Deployment
  #       run: curl -f http://api.marquei.pt || exit 1
